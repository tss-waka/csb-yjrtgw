{"version":3,"sources":["apollo/client.jsx","App.jsx","index.js"],"names":["apolloClient","ApolloClient","link","ApolloLink","from","operation","forward","setContext","headers","Authorization","HttpLink","uri","cache","InMemoryCache","resultCaching","getProjects","variables","a","request","gql","query","response","data","search","addStar","id","console","log","input","starrableId","mutate","mutation","removeStar","App","useState","first","last","before","after","searchVariables","setSearchVariables","searchText","setSearchText","repositoryCount","setRepositoryCount","edges","setEdges","hasNext","setHasNext","hasPrev","setHasPrev","pageInfo","beforeCursor","endCursor","hasNextPage","hasPreviousPage","clickSearch","clickNext","clickPrev","setStarStatus","edge_list","map","edge","node","starrable","viewerHasStarred","stargazers","totalCount","clickAddStar","clickRemoveStar","style","padding","margin","backgroundColor","value","onChange","event","target","marginRight","onClick","href","url","name","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.73e3b706.chunk.js","sourcesContent":["import { ApolloClient } from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { ApolloLink } from \"apollo-link\";\r\nimport { HttpLink } from \"apollo-link-http\";\r\nimport gql from \"graphql-tag\";\r\n\r\nconst GITHUB_TOKEN = \"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\";\r\n\r\nconst apolloClient = new ApolloClient({\r\n  link: ApolloLink.from([\r\n    new ApolloLink((operation, forward) => {\r\n      operation.setContext({\r\n        headers: {\r\n          Authorization: `Bearer ${GITHUB_TOKEN}`\r\n        }\r\n      });\r\n\r\n      return forward(operation);\r\n    }),\r\n    new HttpLink({ uri: \"https://api.github.com/graphql\" })\r\n  ]),\r\n  cache: new InMemoryCache({ resultCaching: false })\r\n});\r\n\r\nexport const getProjects = async (variables) => {\r\n  const request = gql`\r\n    query search(\r\n      $first: Int\r\n      $last: Int\r\n      $before: String\r\n      $after: String\r\n      $query: String!\r\n    ) {\r\n      search(\r\n        query: $query\r\n        first: $first\r\n        last: $last\r\n        before: $before\r\n        after: $after\r\n        type: REPOSITORY\r\n      ) {\r\n        repositoryCount\r\n        pageInfo {\r\n          endCursor\r\n          hasNextPage\r\n          hasPreviousPage\r\n          startCursor\r\n        }\r\n        edges {\r\n          cursor\r\n          node {\r\n            ... on Repository {\r\n              id\r\n              name\r\n              url\r\n              stargazers {\r\n                totalCount\r\n              }\r\n              viewerHasStarred\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `;\r\n\r\n  const response = await apolloClient.query({\r\n    query: request,\r\n    variables: variables\r\n  });\r\n\r\n  return response.data.search;\r\n};\r\n\r\nexport const addStar = async (id) => {\r\n  console.log(\"addStar\");\r\n  const variables = {\r\n    input: {\r\n      starrableId: id\r\n    }\r\n  };\r\n\r\n  const request = gql`\r\n    mutation addStar($input: AddStarInput!) {\r\n      addStar(input: $input) {\r\n        starrable {\r\n          id\r\n          viewerHasStarred\r\n        }\r\n      }\r\n    }\r\n  `;\r\n\r\n  const response = await apolloClient.mutate({\r\n    mutation: request,\r\n    variables: variables\r\n  });\r\n\r\n  return response.data.addStar;\r\n};\r\n\r\nexport const removeStar = async (id) => {\r\n  console.log(\"removeStar\");\r\n  const variables = {\r\n    input: {\r\n      starrableId: id\r\n    }\r\n  };\r\n\r\n  const request = gql`\r\n    mutation removeStar($input: RemoveStarInput!) {\r\n      removeStar(input: $input) {\r\n        starrable {\r\n          id\r\n          viewerHasStarred\r\n        }\r\n      }\r\n    }\r\n  `;\r\n\r\n  const response = await apolloClient.mutate({\r\n    mutation: request,\r\n    variables: variables\r\n  });\r\n\r\n  return response.data.removeStar;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { getProjects, addStar, removeStar } from \"./apollo/client\";\r\n\r\nexport default function App() {\r\n  const [searchVariables, setSearchVariables] = useState({\r\n    query: \"\",\r\n    first: null,\r\n    last: null,\r\n    before: null,\r\n    after: null\r\n  });\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [repositoryCount, setRepositoryCount] = useState(0);\r\n  const [edges, setEdges] = useState([]);\r\n  const [hasNext, setHasNext] = useState(false);\r\n  const [hasPrev, setHasPrev] = useState(false);\r\n  const changeSearchText = (event) => setSearchText(event.target.value);\r\n\r\n  const search = async (variables) => {\r\n    const response = await getProjects(variables);\r\n    setRepositoryCount(response.repositoryCount);\r\n    setEdges([...response.edges]);\r\n    variables.before = response.pageInfo.beforeCursor;\r\n    variables.after = response.pageInfo.endCursor;\r\n    variables.first = null;\r\n    variables.last = null;\r\n    setSearchVariables(variables);\r\n    setHasNext(response.pageInfo.hasNextPage);\r\n    setHasPrev(response.pageInfo.hasPreviousPage);\r\n  };\r\n\r\n  const clickSearch = async () => {\r\n    if (!searchText) return;\r\n    const data = {\r\n      ...searchVariables,\r\n      query: searchText,\r\n      first: 5,\r\n      last: null,\r\n      before: null,\r\n      after: null\r\n    };\r\n    await search(data);\r\n  };\r\n\r\n  const clickNext = async () => {\r\n    const data = {\r\n      ...searchVariables,\r\n      first: 5,\r\n      before: null\r\n    };\r\n    await search(data);\r\n  };\r\n\r\n  const clickPrev = async () => {\r\n    const data = {\r\n      ...searchVariables,\r\n      last: 5,\r\n      after: null\r\n    };\r\n    await search(data);\r\n  };\r\n\r\n  const setStarStatus = (response) => {\r\n    const edge_list = [...edges];\r\n    edge_list.map((edge) => {\r\n      if (edge.node.id === response.starrable.id) {\r\n        if (\r\n          edge.node.viewerHasStarred !== response.starrable.viewerHasStarred\r\n        ) {\r\n          edge.node.stargazers.totalCount += response.starrable.viewerHasStarred\r\n            ? 1\r\n            : -1;\r\n        }\r\n        edge.node.viewerHasStarred = response.starrable.viewerHasStarred;\r\n      }\r\n      return edge;\r\n    });\r\n    setEdges(edge_list);\r\n  };\r\n\r\n  const clickAddStar = async (id) => {\r\n    const response = await addStar(id);\r\n    setStarStatus(response);\r\n  };\r\n\r\n  const clickRemoveStar = async (id) => {\r\n    const response = await removeStar(id);\r\n    setStarStatus(response);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{ padding: \"8px\", margin: \"4px\", backgroundColor: \"#ddffff\" }}\r\n      >\r\n        <input\r\n          value={searchText}\r\n          onChange={changeSearchText}\r\n          style={{ marginRight: \"4px\" }}\r\n        />\r\n        <button onClick={clickSearch}>検索</button>\r\n      </div>\r\n      <div\r\n        style={{ padding: \"8px\", margin: \"4px\", backgroundColor: \"#ffddff\" }}\r\n      >\r\n        <div>\r\n          \"{searchVariables.query}\" is Searched. Found {repositoryCount}{\" \"}\r\n          {repositoryCount === 1 ? \"Repository\" : \"Repositories\"}\r\n        </div>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Star</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {edges.map((edge) => {\r\n              return (\r\n                <tr key={edge.node.id}>\r\n                  <td>\r\n                    <a href={edge.node.url} style={{ margin: \"0px 4px\" }}>\r\n                      {edge.node.name}\r\n                    </a>\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      onClick={() => {\r\n                        return edge.node.viewerHasStarred\r\n                          ? clickRemoveStar(edge.node.id)\r\n                          : clickAddStar(edge.node.id);\r\n                      }}\r\n                    >\r\n                      {edge.node.stargazers.totalCount} Stars |{\" \"}\r\n                      {edge.node.viewerHasStarred ? \"★\" : \"-\"}\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div\r\n        style={{ padding: \"8px\", margin: \"4px\", backgroundColor: \"#ffffdd\" }}\r\n      >\r\n        {hasPrev && <button onClick={clickPrev}>Prev</button>}\r\n        {hasNext && (\r\n          <button onClick={clickNext} style={{ margin: \"0px 4px\" }}>\r\n            Next\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}